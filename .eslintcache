[{"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\index.js":"1","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\App.js":"2","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP02\\PP02.js":"3","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP01\\PP01.js":"4","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP03\\PP03.js":"5","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP01\\components\\BMI.js":"6","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP01\\components\\QA.js":"7","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP01\\components\\Counter.js":"8","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP02\\components\\ToDo.js":"9","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP02\\components\\Wallet.js":"10","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP03\\components\\WalletV2.js":"11","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\Pages\\About.js":"12","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\Pages\\Contact.js":"13","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\Pages\\Projects.js":"14"},{"size":221,"mtime":1612915168429,"results":"15","hashOfConfig":"16"},{"size":1535,"mtime":1613710269275,"results":"17","hashOfConfig":"16"},{"size":364,"mtime":1612919563102,"results":"18","hashOfConfig":"16"},{"size":420,"mtime":1612919510805,"results":"19","hashOfConfig":"16"},{"size":301,"mtime":1612919844557,"results":"20","hashOfConfig":"16"},{"size":1486,"mtime":1612919186963,"results":"21","hashOfConfig":"16"},{"size":1265,"mtime":1612919157229,"results":"22","hashOfConfig":"16"},{"size":1552,"mtime":1612919237591,"results":"23","hashOfConfig":"16"},{"size":3318,"mtime":1612919614488,"results":"24","hashOfConfig":"16"},{"size":6967,"mtime":1612919689087,"results":"25","hashOfConfig":"16"},{"size":5821,"mtime":1613692913559,"results":"26","hashOfConfig":"16"},{"size":1085,"mtime":1613695241187,"results":"27","hashOfConfig":"16"},{"size":384,"mtime":1613709870763,"results":"28","hashOfConfig":"16"},{"size":400,"mtime":1613694406146,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"11tury1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\index.js",[],["62","63"],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\App.js",["64"],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP02\\PP02.js",[],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP01\\PP01.js",[],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP03\\PP03.js",[],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP01\\components\\BMI.js",[],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP01\\components\\QA.js",[],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP01\\components\\Counter.js",[],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP02\\components\\ToDo.js",["65","66"],"// Nusaiba Mahmood\r\n// ITRJS PP02\r\n// ToDo.js\r\n\r\nimport React from 'react';\r\n\r\nclass ToDo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            todo_list:\r\n                [\r\n                    {\r\n                        id: 0,\r\n                        task: 'This is a todo task',\r\n                        done: false\r\n                    },\r\n                    {\r\n                        id: 1,\r\n                        task: 'This is another todo task',\r\n                        done: false\r\n                    }\r\n                ],\r\n\r\n            new_todo_item: '',\r\n        };\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.setState({ new_todo_item: `${event.target.value}` });\r\n    }\r\n\r\n    handleCheckbox(event) {\r\n        console.log(`${event.target.checked ? 'was checked' : 'was unchecked'}`);\r\n        console.log(event.target.parentElement);\r\n\r\n        const taskChecked = event.target.checked;\r\n        const list_item_id = event.target.parentElement.id;\r\n\r\n        const updatedList = this.state.todo_list.map(\r\n            (item) => {\r\n                if (item.id == list_item_id) {\r\n                    return { id: item.id, task: item.task, done: (taskChecked ? true : false) }\r\n                }\r\n                return item;\r\n            }\r\n        )\r\n\r\n        console.log(updatedList);\r\n        this.setState({ todo_list: updatedList });\r\n    }\r\n\r\n    addItem(event) {\r\n        event.preventDefault();\r\n        console.log('A new task was submitted: ' + this.state.new_todo_item);\r\n        console.log(this.state.todo_list.length);\r\n\r\n        const newItem = { id: this.state.todo_list.length, task: this.state.new_todo_item, done: false };\r\n        this.setState({ todo_list: [...this.state.todo_list, newItem] });\r\n        console.log(this.state.todo_list.length);\r\n    }\r\n\r\n    removeItem(event) {\r\n        const updatedList = this.state.todo_list.filter((item) => item.id != event.target.parentElement.id);\r\n        this.setState({ todo_list: updatedList });\r\n        console.log(updatedList);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h2>TO DO LIST</h2>\r\n                <form onSubmit={this.addItem.bind(this)}>\r\n                    <input\r\n                        type=\"text\" value={this.state.new_todo_item} onChange={this.handleInputChange.bind(this)}\r\n                        placeholder='Enter a task to do...' size='35' required\r\n                    />\r\n                    <input type=\"submit\" value=\"Add Task\" />\r\n                </form>\r\n\r\n                <h3>TO DO: </h3>\r\n                <ul style={{ listStyleType: \"none\" }}>\r\n                    {\r\n                        this.state.todo_list.map(\r\n                            (item) => <li key={`${item.id}`} id={`${item.id}`}>\r\n                                <button style={{ background: 'salmon' }} onClick={this.removeItem.bind(this)}>x</button>\r\n                                <input type=\"checkbox\" onChange={this.handleCheckbox.bind(this)} />\r\n                                {item.done ? <del>{item.task}</del> : `${item.task}`}\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDo;\r\n","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP02\\components\\Wallet.js",["67","68"],"// Nusaiba Mahmood\r\n// ITRJS PP02\r\n// Wallet.js\r\n\r\nimport React from 'react';\r\n\r\nclass Wallet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            input_type: '',\r\n            input_note: '',\r\n            input_amount: 0,\r\n\r\n            net_balance: 0,\r\n            total_income: 0,\r\n            total_expenses: 0,\r\n\r\n            income:\r\n                [\r\n                    {\r\n                        id: 'inc-0',\r\n                        type: 'inc',\r\n                        amount: 1000,\r\n                        note: 'My Income'\r\n                    },\r\n                    {\r\n                        id: 'inc-1',\r\n                        type: 'inc',\r\n                        amount: 500,\r\n                        note: 'Amazon Giftcard'\r\n                    }\r\n                ],\r\n\r\n            expenses:\r\n                [\r\n                    {\r\n                        id: 'exp-0',\r\n                        type: 'exp',\r\n                        amount: 450,\r\n                        note: 'Spent Amazon giftcard'\r\n                    },\r\n                    {\r\n                        id: 'exp-1',\r\n                        type: 'exp',\r\n                        amount: 100,\r\n                        note: 'Monthly Groceries'\r\n                    }\r\n                ],\r\n        };\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    calculateTotals() {\r\n\r\n        const total_inc = parseFloat(this.state.income.reduce((acc, item) => { return item.amount + acc }, 0));\r\n        const total_exp = parseFloat(this.state.expenses.reduce((acc, item) => { return item.amount + acc }, 0));\r\n        const net = parseFloat(total_inc - total_exp);\r\n\r\n        console.log(total_inc); console.log(this.state.total_income);\r\n        console.log(total_exp); console.log(this.state.total_expenses);\r\n        console.log(net); console.log(this.state.net_balance);\r\n\r\n        this.setState({ net_balance: net });\r\n        this.setState({ total_income: total_inc });\r\n        this.setState({ total_expenses: total_exp });\r\n\r\n    }\r\n\r\n    componentDidMount(){this.calculateTotals();}\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if ((prevState.income.length !== this.state.income.length) || \r\n            (prevState.expenses.length !== this.state.expenses.length)) {\r\n            this.calculateTotals(); console.log('component did mount?');\r\n        }\r\n\r\n    }\r\n\r\n    addItem(event) {\r\n        event.preventDefault();\r\n\r\n        const newItemType = this.state.input_type;\r\n        const newItemId = (newItemType === 'inc' ? `inc-${this.state.income.length}` : `exp-${this.state.income.length}`);\r\n        const newItem = {\r\n            id: newItemId,\r\n            type: newItemType,\r\n            note: this.state.input_note,\r\n            amount: parseFloat(this.state.input_amount)\r\n        };\r\n\r\n        if (newItemType === 'inc') {\r\n            this.setState({ income: [...this.state.income, newItem] });\r\n            console.log('item added to incomes');\r\n            //this.calculateTotals();\r\n        }\r\n        if (newItemType === 'exp') {\r\n            this.setState({ expenses: [...this.state.expenses, newItem] });\r\n            console.log('item added to expenses');\r\n            //this.calculateTotals();\r\n        }\r\n    }\r\n\r\n    removeItem(event) {\r\n\r\n        const removedItemId = event.target.parentElement.id;\r\n\r\n        if (removedItemId.substring(0, 3) === 'inc') {\r\n            const updatedInc = this.state.income.filter((item) => item.id != event.target.parentElement.id);\r\n            this.setState({ income: updatedInc });\r\n            console.log('item removed from income');\r\n            //this.calculateTotals();\r\n        }\r\n\r\n        if (removedItemId.substring(0, 3) === 'exp') {\r\n            const updatedExp = this.state.expenses.filter((item) => item.id != event.target.parentElement.id);\r\n            this.setState({ expenses: updatedExp });\r\n            console.log('item removed from expenses');\r\n            //this.calculateTotals();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>WALLET</h2>\r\n                <form onSubmit={this.addItem.bind(this)}>\r\n\r\n                    <select\r\n                        value={this.state.input_type}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                        name='input_type' id='input_type' required>\r\n\r\n                        <option value='' disabled>+/-</option>\r\n                        <option value='inc'>+</option>\r\n                        <option value='exp'>-</option>\r\n                    </select>\r\n\r\n                    <input\r\n                        name='input_note' id='input_note'\r\n                        type=\"text\" size='35' required\r\n                        placeholder='Enter a description'\r\n                        value={this.state.input_note}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                    />\r\n\r\n                    <input\r\n                        name='input_amount' id='input_amount'\r\n                        type=\"number\" min='0' size='15' required\r\n                        placeholder='Enter an amount'\r\n                        value={this.state.input_amount}\r\n                        onChange={this.handleInputChange.bind(this)}\r\n                    />\r\n\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </form>\r\n\r\n                <h3 style={{ color: \"purple\" }}>NET BALANCE: $ {this.state.net_balance}</h3>\r\n\r\n                <h3 style={{ color: \"green\" }}>INCOME: $ + {this.state.total_income}</h3>\r\n                <ul style={{ listStyleType: \"none\" }}>\r\n                    {\r\n                        this.state.income.map(\r\n                            (item) => <li key={`${item.id}`} id={`${item.id}`}>\r\n                                <button style={{ background: 'salmon' }} onClick={this.removeItem.bind(this)}>x</button>\r\n                                {` $ ${item.amount} ${item.note}`}\r\n\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n\r\n                <h3 style={{ color: \"red\" }}>EXPENSES: $ - {this.state.total_expenses}</h3>\r\n                <ul style={{ listStyleType: \"none\" }}>\r\n                    {\r\n                        this.state.expenses.map(\r\n                            (item) => <li key={`${item.id}`} id={`${item.id}`}>\r\n                                <button style={{ background: 'salmon' }} onClick={this.removeItem.bind(this)}>x</button>\r\n                                {`  $ ${item.amount} ${item.note}`}\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wallet;","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\PP03\\components\\WalletV2.js",["69"],"// Nusaiba Mahmood\r\n// ITRJS PP03\r\n// WalletV2.js\r\n\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction FunkyWallet() {\r\n\r\n    const [inputType, setInputType] = useState('');\r\n    const [inputNote, setInputNote] = useState('');\r\n    const [inputAmount, setInputAmount] = useState(0);\r\n\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [expenses, setExpenses] = useState([]);\r\n\r\n    const [netBalance, setNetBalance] = useState(0);\r\n    const [totalIncomes, setTotalIncome] = useState(0);\r\n    const [totalExpenses, setTotalExpenses] = useState(0);\r\n\r\n    useEffect(() => { calculateTotals(); }, [incomes, expenses, netBalance, totalExpenses, totalIncomes])\r\n\r\n    const addItem = (event) => {\r\n        event.preventDefault();\r\n\r\n        const item_id = inputType === 'inc' ?\r\n            `inc-${incomes.length + inputAmount}-${inputNote.charAt(0)}` :\r\n            `exp-${expenses.length + inputAmount}-${inputNote.charAt(0)}`;\r\n        \r\n        const item = { item_id, inputType, inputAmount, inputNote };\r\n\r\n        if (inputType === 'inc') { setIncomes([...incomes, item]); }\r\n        if (inputType === 'exp') { setExpenses([...expenses, item]); }\r\n\r\n    }\r\n\r\n    const removeItem = (event) => {\r\n\r\n        const removee = event.target.parentElement.id;\r\n\r\n        if (removee.substring(0, 3) === 'inc') {\r\n            console.log(incomes);\r\n            setIncomes(incomes.filter((item) => item.item_id !== event.target.parentElement.id));\r\n            console.log(`ITEM : << ${removee} >> REMOVED from income.`);\r\n            console.log(incomes);\r\n        }\r\n        if (removee.substring(0, 3) === 'exp') {\r\n            console.log(expenses);\r\n            setExpenses(expenses.filter((item) => item.item_id !== event.target.parentElement.id));\r\n            console.log(`ITEM : << ${removee} >> REMOVED from expenses.`);\r\n            console.log(expenses);\r\n        }\r\n    }\r\n\r\n    const calculateTotals = () => {\r\n\r\n        setTotalIncome(incomes.reduce((acc, item) => { return item.inputAmount + acc }, 0));\r\n        setTotalExpenses(expenses.reduce((acc, item) => { return item.inputAmount + acc }, 0));\r\n        setNetBalance(totalIncomes - totalExpenses);\r\n\r\n        console.log(totalIncomes);\r\n        console.log(totalExpenses);\r\n        console.log(netBalance);\r\n    }\r\n\r\n    /**\r\n    const state = {\r\n\r\n        input_type: '',\r\n        input_note: '',\r\n        input_amount: 0,\r\n\r\n        net_balance: 0,\r\n        total_income: 0,\r\n        total_expenses: 0,\r\n\r\n        income:\r\n            [\r\n                {\r\n                    id: 'inc-0',\r\n                    type: 'inc',\r\n                    amount: 1000,\r\n                    note: 'My Income'\r\n                },\r\n                {\r\n                    id: 'inc-1',\r\n                    type: 'inc',\r\n                    amount: 500,\r\n                    note: 'Amazon Giftcard'\r\n                }\r\n            ],\r\n\r\n        expenses:\r\n            [\r\n                {\r\n                    id: 'exp-0',\r\n                    type: 'exp',\r\n                    amount: 450,\r\n                    note: 'Spent Amazon giftcard'\r\n                },\r\n                {\r\n                    id: 'exp-1',\r\n                    type: 'exp',\r\n                    amount: 100,\r\n                    note: 'Monthly Groceries'\r\n                }\r\n            ],\r\n    };\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            <h2>FUNKY WALLET</h2>\r\n            <form onSubmit={addItem}>\r\n\r\n                <select\r\n                    value={inputType}\r\n                    onChange={e => setInputType(e.target.value)}\r\n                    name='input_type' id='input_type' required>\r\n\r\n                    <option value='' disabled>+/-</option>\r\n                    <option value='inc'>+</option>\r\n                    <option value='exp'>-</option>\r\n                </select>\r\n\r\n                <input\r\n                    name='input_note' id='input_note'\r\n                    type=\"text\" size='35' required\r\n                    placeholder='Enter a description'\r\n                    value={inputNote}\r\n                    onChange={e => setInputNote(e.target.value)}\r\n                />\r\n\r\n                <input\r\n                    name='input_amount' id='input_amount'\r\n                    type=\"number\" min='0' size='15' required\r\n                    placeholder='Enter an amount'\r\n                    value={inputAmount}\r\n                    onChange={e => setInputAmount(parseFloat(e.target.value))}\r\n                />\r\n\r\n                <input type=\"submit\" value=\"Add\" />\r\n            </form>\r\n\r\n            <h3 style={{ color: \"purple\" }}>NET BALANCE: $ {netBalance}</h3>\r\n\r\n            <h3 style={{ color: \"green\" }}>INCOME: $ + {totalIncomes}</h3>\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n                {\r\n                    incomes.map(\r\n                        (item) => <li key={`${item.item_id}`} id={`${item.item_id}`}>\r\n                            <button style={{ background: 'salmon' }} onClick={removeItem}>x</button>\r\n                            {` $ ${item.inputAmount} ${item.inputNote}`}\r\n\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n            <h3 style={{ color: \"red\" }}>EXPENSES: $ - {totalExpenses}</h3>\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n                {\r\n                    expenses.map(\r\n                        (item) => <li key={`${item.item_id}`} id={`${item.item_id}`}>\r\n                            <button style={{ background: 'salmon' }} onClick={removeItem}>x</button>\r\n                            {` $ ${item.inputAmount} ${item.inputNote}`}\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FunkyWallet;","C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\Pages\\About.js",[],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\Pages\\Contact.js",["70"],"C:\\Users\\nstar\\Documents\\GITHUB\\reactjs-practice\\src\\Pages\\Projects.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":43,"column":29,"nodeType":"81","messageId":"82","endLine":43,"endColumn":31},{"ruleId":"79","severity":1,"message":"83","line":65,"column":75,"nodeType":"81","messageId":"82","endLine":65,"endColumn":77},{"ruleId":"79","severity":1,"message":"83","line":117,"column":75,"nodeType":"81","messageId":"82","endLine":117,"endColumn":77},{"ruleId":"79","severity":1,"message":"83","line":124,"column":77,"nodeType":"81","messageId":"82","endLine":124,"endColumn":79},{"ruleId":"84","severity":1,"message":"85","line":21,"column":45,"nodeType":"86","endLine":21,"endColumn":105,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":10,"column":27,"nodeType":"90","endLine":10,"endColumn":30},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calculateTotals'. Either include it or remove the dependency array.","ArrayExpression",["93"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [incomes, expenses, netBalance, totalExpenses, totalIncomes, calculateTotals]",{"range":"96","text":"97"},[639,699],"[incomes, expenses, netBalance, totalExpenses, totalIncomes, calculateTotals]"]